// Tests zsim hooks for different programming languages To build tests, run
// make -j -C misc/hooks You can run the real tests with make -C misc/hooks
// run_tests This uses logToFile because some JVMs need transparency (they fork
// and use pipes, and writing to stdout/stderr breaks those pipes)

sys = {
    cores = {
        c = {
            cores = 64; 
            type = "Timing";
            dcache = "l1d";
            icache = "l1i";
        };
    };

    lineSize = 64;

    caches = {
        l1d = {
            caches = 64; 
            size = 16384;
            latency = 4;
            array : 
            {
                ways = 2;
                type = "SetAssoc";
                hash = "None";
            };
        };
        l1i = {
            caches = 64;
            size = 16384;
            latency = 3;
            array : 
            {
                ways = 2;
                type = "SetAssoc";
                hash = "None";
            };
        };
        l2prefetcher = {
            isPrefetcher = true;
            prefetchers = 64;
            children = "l1d";    
        }
        l2 = {
            caches = 64;
            size = 1048576;
            children = "l2prefetcher|l1i";
            type = "Simple";
        };

        l3 = {
            caches = 1;
            size = 4194304;
            latency = 27;
	    //nonInclusiveHack = true;
            children = "l2";
            type = "Simple";
        };
    };

    frequency = 2270;  # System frequency, not memory
    mem = {
        type = "MD1";
    };
};

sim = {
    logToFile = true;
    phaseLength = 1000;
    printHierarchy = true;
};

process0 = {
#    command = "naive-matmul 256 512";
    command = "blackscholes 64 /home/gaurav/GraduateStudies/CS752/Tools/parsec-3.0/pkgs/apps/blackscholes/inputs/in_16K.txt abc.txt";
    startFastForwarded = False;
};
